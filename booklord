#!/usr/bin/env zsh
#
# Wrapper around `task` to use it as a challenge manager for the yearly
# "Booklord Challenge" in TBB.
#
# Each year of challenges is represented as a project, "challenge$YEAR".
# Individual tasks are challenges to be completed.
# Annotate a challenge with information about how it was completed; mark it
# "done" when finished.

source $(dirname $(realpath $0))/tasklib.sh

export TASKRC=$HOME/Books/booklordrc
export YEAR=$(date +%Y)

function main {
  init-config booklord.defaults \
    "context.$YEAR=project:challenge$YEAR" \
    "context=$YEAR"
  process-year-filter "$@"
  dispatch "${TASK_ARGV[@]}"
}

function dispatch {
  case "$*" in
    help)
      cut -c6- <<EOF
        Usage:
          booklord reset-config
          booklord next|all
          booklord grep <text>
          booklord add-challenge <description>
          booklord nextyear [WIP]
          booklord <ids> annotate|delete|done
EOF
      ;;
    reset-config)
      rm -v "$TASKRC"
      ;;
    next|all|report)
      \task "challenges_$@"
      ;;
    grep*)
      shift
      \task rc.verbose:label,blank rc._forcecolor:on rc.detection:off all | head -n2
      \task rc.verbose:nothing rc.detection:off all | egrep -i "$@"
      ;;
    add-challenge*)
      shift
      COUNT=$(\task count)
      \task rc.dateformat:"Y-M-D H:N:S" add \
        project:"challenge${YEAR}" entry:"${YEAR}-01-01 00:${COUNT}:00" "$@"
      ;;
    nextyear)
      # TODO
      # Need to:
      # - mark all pending tasks for the current year deleted
      # - run gc
      # - task config context.ytd project:challenge${YEAR}
      echo "Not yet implemented."
      false
      ;;
    *)
      \task "$@"
      ;;
  esac
}

exec main "$@"
