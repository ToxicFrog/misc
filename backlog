#!/usr/bin/env zsh

# Wrapper around `task` to use it as a game backlog management script.
# Like Backloggery but for the terminal, pretty much.
#
# We map completion status, genre, and platform to tags?
# We can filter by tags or by project, but can only get progress bars per-project
# So, matching current BL behaviour, we probably want to use project as an alias
# for platform
# So: project == platform, use tags for status
# (unplayed/unfinished/finished/completed/null) and for anything else we want
# (genre?)
# Description is title
# Oh, tags can also be series, e.g. +series:thief

export TASKRC=$HOME/.backlogrc

if [[ ! -e $TASKRC ]]; then
  cat >$TASKRC <<EOF
data.location=~/.backlog
verbose=off
reserved.lines=3
nag=
confirmation=no
bulk=0
defaultwidth=0

# Games we are currently playing have highest priority.
# Age/order of addition doesn't affect sort order.
urgency.active.coefficient=1024
urgency.age.coefficient=0
urgency.project.coefficient=0
urgency.tags.coefficient=0

# UDAs
uda.gamestate.label=Play Status
uda.gamestate.type=string
uda.gamestate.values=unplayed,unfinished,finished,completed,mastered,null

# Aliases
alias.unplayed=modify status:pending start: gamestate:unplayed
alias.unfinished=modify status:pending start:now gamestate:unfinished
alias.finished=modify status:completed end:now gamestate:finished
alias.completed=modify status:completed end:now gamestate:completed
alias.mastered=modify status:completed end:now gamestate:mastered
alias.null=modify status:completed end:now gamestate:null
alias.percent=summary
alias.platforms=summary
default.command=next

# Report configuration
report.list.columns=id,start.age,project,gamestate,tags,description
report.list.labels=ID,Playing,Platform,Status,Tags,Title
report.list.sort=start-,urgency-,description+

report.next.columns=id,start.age,project,gamestate,tags,description
report.next.labels=ID,Playing,Platform,Status,Tags,Title
report.next.sort=urgency-,description+

report.all.columns=id,uuid.short,project,gamestate,tags,description
report.all.description=All games
report.all.labels=ID,UUID,Platform,Status,Tags,Title

EOF
fi

# support year:2017 as an alias for end.after:2017-01-01 end.before:2018-01-01
# also support platform: as an alias for project:
new_args=()
while [[ $1 ]]; do
  if [[ $1 == year:* ]]; then
    local year="${1/year:/}"
    new_args+="end.after:$year-01-01"
    new_args+="end.before:$((year+1))-01-01"
  elif [[ $1 == pl*:* ]]; then
    new_args+="project:${1#pl*:}"
  else
    new_args+="$1"
  fi
  shift
done
set -- "${new_args[@]}"

case "$*" in
  grep*)
    shift
    \task rc.verbose:label,blank rc._forcecolor:on rc.detection:off all | head -n2
    \task rc.verbose:nothing rc.detection:off all | egrep -i "$@"
    ;;
  annote*)
    # Annotate the last completed game.
    LAST=$(\task rc.verbose:nothing rc.report.one_field.sort:end+ one_field | tail -n1)
    \task $LAST annotate "$@"
    ;;
  reset-config)
    rm -v "$TASKRC"
    ;;
  *start)
    \task "${argv[1,-2]}" unfinished
    ;;
  *done)
    echo 'Use `backlog <games> (finished|completed|mastered|null)` instead.'
    ;;
  *)
    \task "$@"
    ;;
esac

exit $?
