import {initlib,tprintf} from "lib.ns";
import * as rpc from "rpc.ns";

var ns;

function cmd_help() {
  tprintf("Usage: shodan (spus|tasks|log|start|restart|stop)");
}

function cmd_spus() {
  tprintf("%20.20s  %4s  %3s  %s",
    "hostname", "Thr", "Ver", "Task");
  let statii = rpc.readStatus();
  for (let name in statii) {
    if (!name.match("^spu.ns")) continue;
    let status = statii[name];
    let [host,shard] = status.host.split(":");
    if (!ns.serverExists(host)) continue;
    if (ns.isRunning("spu.ns", host, status.host, status.threads, status.version)) {
      tprintf("%20.20s  %4s  %3s  %s",
        status.host, status.threads, status.version, status.task ? status.task.join(" ") : "(idle)");
    }
  }
}

function cmd_tasks() {
  let tasks = rpc.readStatus("shodan.ns").tasks;
  tprintf("%18.18s | %9s | %6s | %9s | %18s",
    "hostname", " weaken  ", " hack ", "  grow   ", "   target money   ");
  tprintf("-".repeat(18 + 3 + 9 + 3 + 6 + 3 + 9 + 3 + 18 + 1));
  for (let task of tasks) {
    tprintf("%18.18s | %4d/%-4d | %4d/%-1d | %4d/%-4d | %18s$",
      task.host, task.pending_weaken, task.weaken,
      task.pending_hack, task.hack,
      task.pending_grow, task.grow,
      task.target_money.toLocaleString(undefined, {maximumFractionDigits:0}));
      // ns.getServerMoneyAvailable(task.host).toLocaleString(undefined, {maximumFractionDigits:0}));
  }
}

function cmd_log() {
  for (let line of ns.getScriptLogs("shodan.ns")) {
    ns.tprint(line);
  }
}

async function cmd_stop() {
  ns.kill("shodan.ns", ns.getHostname());
  while (ns.scriptRunning("shodan.ns", ns.getHostname())) await ns.sleep(100);
  ns.tprint("SHODAN stopped.");
}

async function cmd_start() {
  if (ns.scriptRunning("shodan.ns", ns.getHostname())) {
    ns.tprint("SHODAN already running.");
  } else {
    await ns.run("shodan.ns");
    ns.tprint("SHODAN starting.");
  }
}

async function cmd_restart() {
  ns.kill("shodan.ns", ns.getHostname());
  while (ns.scriptRunning("shodan.ns", ns.getHostname())) await ns.sleep(100);
  await ns.run("shodan.ns");
  ns.tprint("SHODAN restarted.");
}

let commands = {
  help: cmd_help,
  spus: cmd_spus,
  tasks: cmd_tasks,
  log: cmd_log,
  stop: cmd_stop,
  restart: cmd_restart,
  start: cmd_restart,
};

export async function main(n) {
  ns = n;
  initlib(ns);
  rpc.init(ns);

  if (ns.args[0] && commands[ns.args[0]]) {
    await Promise.resolve(commands[ns.args[0]]());
  } else {
    commands.help();
  }
}
